
// Copyright (c) 2019 PaddlePaddle Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#pragma once
#include<map>
// ATTENTION This can only include in a .cc file.

const std::map<std::string, std::string> kernel2path_map{


  {"cast,kHost,kAny,kNCHW,def", "cast_compute.cc"},
  {"sequence_reverse,kX86,kFloat,kNCHW,def", "sequence_reverse_compute.cc"},
  {"sequence_reverse,kX86,kFloat,kNCHW,int32", "sequence_reverse_compute.cc"},
  {"sequence_reverse,kX86,kFloat,kNCHW,int64", "sequence_reverse_compute.cc"},
  {"sequence_concat,kX86,kFloat,kNCHW,def", "sequence_concat_compute.cc"},
  {"square,kX86,kFloat,kNCHW,def", "activation_compute.cc"},
  {"relu,kX86,kFloat,kNCHW,def", "activation_compute.cc"},
  {"leaky_relu,kX86,kFloat,kNCHW,def", "activation_compute.cc"},
  {"tanh,kX86,kFloat,kNCHW,def", "activation_compute.cc"},
  {"gelu,kX86,kFloat,kNCHW,def", "activation_compute.cc"},
  {"softsign,kX86,kFloat,kNCHW,def", "activation_compute.cc"},
  {"sigmoid,kX86,kFloat,kNCHW,def", "activation_compute.cc"},
  {"relu6,kX86,kFloat,kNCHW,def", "activation_compute.cc"},
  {"sqrt,kX86,kFloat,kNCHW,def", "activation_compute.cc"},
  {"rsqrt,kX86,kFloat,kNCHW,def", "activation_compute.cc"},
  {"mish,kX86,kFloat,kNCHW,def", "activation_compute.cc"},
  {"hard_swish,kX86,kFloat,kNCHW,def", "activation_compute.cc"},
  {"lod_array_length,kHost,kAny,kAny,def", "lod_array_length_compute.cc"},
  {"sequence_conv,kX86,kFloat,kNCHW,def", "sequence_conv_compute.cc"},
  {"slice,kX86,kFloat,kNCHW,def", "slice_compute.cc"},
  {"slice,kX86,kFloat,kNCHW,array_def", "slice_compute.cc"},
  {"slice,kX86,kFloat,kNCHW,int32", "slice_compute.cc"},
  {"slice,kX86,kFloat,kNCHW,array_int32", "slice_compute.cc"},
  {"slice,kX86,kFloat,kNCHW,int64", "slice_compute.cc"},
  {"slice,kX86,kFloat,kNCHW,array_int64", "slice_compute.cc"},
  {"concat,kX86,kFloat,kNCHW,def", "concat_compute.cc"},
  {"concat,kX86,kFloat,kNCHW,int32", "concat_compute.cc"},
  {"concat,kX86,kFloat,kNCHW,int64", "concat_compute.cc"},
  {"fill_constant_batch_size_like,kHost,kAny,kNCHW,def", "fill_constant_batch_size_like_compute.cc"},
  {"unsqueeze,kHost,kAny,kAny,def", "unsqueeze_compute.cc"},
  {"unsqueeze2,kHost,kAny,kAny,def", "unsqueeze_compute.cc"},
  {"transpose,kX86,kFloat,kNCHW,def", "transpose_compute.cc"},
  {"transpose2,kX86,kFloat,kNCHW,def", "transpose_compute.cc"},
  {"transpose,kX86,kFloat,kNCHW,int64", "transpose_compute.cc"},
  {"transpose2,kX86,kFloat,kNCHW,int64", "transpose_compute.cc"},
  {"mul,kX86,kFloat,kNCHW,def", "mul_compute.cc"},
  {"softmax,kX86,kFloat,kNCHW,def", "softmax_compute.cc"},
  {"search_seq_softmax,kX86,kFloat,kNCHW,def", "softmax_compute.cc"},
  {"prior_box,kHost,kFloat,kNCHW,def", "prior_box_compute.cc"},
  {"prior_box,kARM,kFP16,kNCHW,def", "prior_box_compute.cc"},
  {"var_conv_2d,kX86,kFloat,kNCHW,def", "var_conv_2d_compute.cc"},
  {"matmul_v2,kX86,kFloat,kNCHW,def", "matmul_v2_compute.cc"},
  {"rnn,kX86,kFloat,kNCHW,def", "rnn_compute.cc"},
  {"group_norm,kX86,kFloat,kNCHW,def", "group_norm_compute.cc"},
  {"box_coder,kHost,kFloat,kNCHW,def", "box_coder_compute.cc"},
  {"fill_constant,kHost,kAny,kNCHW,def", "fill_constant_compute.cc"},
  {"elementwise_add,kX86,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_add,kX86,kFloat,kNCHW,int32", "elementwise_compute.cc"},
  {"elementwise_add,kX86,kFloat,kNCHW,int64", "elementwise_compute.cc"},
  {"fusion_elementwise_add_activation,kX86,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_sub,kX86,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_sub,kX86,kFloat,kNCHW,int32", "elementwise_compute.cc"},
  {"elementwise_sub,kX86,kFloat,kNCHW,int64", "elementwise_compute.cc"},
  {"fusion_elementwise_sub_activation,kX86,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_mul,kX86,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_mul,kX86,kFloat,kNCHW,int32", "elementwise_compute.cc"},
  {"elementwise_mul,kX86,kFloat,kNCHW,int64", "elementwise_compute.cc"},
  {"fusion_elementwise_mul_activation,kX86,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_div,kX86,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_div,kX86,kFloat,kNCHW,int32", "elementwise_compute.cc"},
  {"elementwise_div,kX86,kFloat,kNCHW,int64", "elementwise_compute.cc"},
  {"fusion_elementwise_div_activation,kX86,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_floordiv,kX86,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_floordiv,kX86,kFloat,kNCHW,int32", "elementwise_compute.cc"},
  {"elementwise_floordiv,kX86,kFloat,kNCHW,int64", "elementwise_compute.cc"},
  {"elementwise_pow,kX86,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_pow,kX86,kFloat,kNCHW,int32", "elementwise_compute.cc"},
  {"elementwise_pow,kX86,kFloat,kNCHW,int64", "elementwise_compute.cc"},
  {"elementwise_mod,kX86,kFloat,kNCHW,int32", "elementwise_compute.cc"},
  {"elementwise_mod,kX86,kFloat,kNCHW,int64", "elementwise_compute.cc"},
  {"elementwise_max,kX86,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_max,kX86,kFloat,kNCHW,int32", "elementwise_compute.cc"},
  {"elementwise_max,kX86,kFloat,kNCHW,int64", "elementwise_compute.cc"},
  {"fusion_elementwise_max_activation,kX86,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"fusion_elementwise_min_activation,kX86,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_min,kX86,kFloat,kNCHW,def", "elementwise_compute.cc"},
  {"elementwise_min,kX86,kFloat,kNCHW,int32", "elementwise_compute.cc"},
  {"elementwise_min,kX86,kFloat,kNCHW,int64", "elementwise_compute.cc"},
  {"pool2d,kX86,kFloat,kNCHW,def", "pool_compute.cc"},
  {"stack,kX86,kFloat,kNCHW,def", "stack_compute.cc"},
  {"search_group_padding,kX86,kFloat,kNCHW,def", "search_group_padding_compute.cc"},
  {"search_seq_depadding,kX86,kFloat,kNCHW,def", "search_seq_depadding_compute.cc"},
  {"fetch,kHost,kAny,kAny,def", "fetch_compute.cc"},
  {"split,kHost,kFP16,kNCHW,def", "split_compute.cc"},
  {"split,kHost,kFloat,kNCHW,def", "split_compute.cc"},
  {"split,kHost,kFloat,kNCHW,int32", "split_compute.cc"},
  {"split,kHost,kFloat,kNCHW,int64", "split_compute.cc"},
  {"split,kHost,kInt64,kNCHW,def", "split_compute.cc"},
  {"feed,kHost,kAny,kAny,def", "feed_compute.cc"},
  {"fc,kX86,kFloat,kNCHW,def", "fc_compute.cc"},
  {"fc,kX86,kInt8,kNCHW,int8_out", "fc_compute.cc"},
  {"fc,kX86,kInt8,kNCHW,fp32_out", "fc_compute.cc"},
  {"sequence_expand_as,kX86,kFloat,kNCHW,def", "sequence_expand_as_compute.cc"},
  {"sequence_expand_as,kX86,kFloat,kNCHW,int32", "sequence_expand_as_compute.cc"},
  {"sequence_expand_as,kX86,kFloat,kNCHW,int64", "sequence_expand_as_compute.cc"},
  {"sequence_pool,kX86,kFloat,kNCHW,def", "sequence_pool_compute.cc"},
  {"range,kHost,kFloat,kAny,def", "range_compute.cc"},
  {"range,kHost,kInt64,kAny,def", "range_compute.cc"},
  {"range,kHost,kInt32,kAny,def", "range_compute.cc"},
  {"range,kHost,kFloat,kAny,int32", "range_compute.cc"},
  {"range,kHost,kFloat,kAny,int64", "range_compute.cc"},
  {"gru_unit,kX86,kFloat,kNCHW,def", "gru_unit_compute.cc"},
  {"lookup_table,kX86,kFloat,kNCHW,def", "lookup_table_compute.cc"},
  {"lookup_table_v2,kX86,kFloat,kNCHW,def", "lookup_table_compute.cc"},
  {"lookup_table,kX86,kFloat,kNCHW,float_int32", "lookup_table_compute.cc"},
  {"lookup_table_v2,kX86,kFloat,kNCHW,float_int32", "lookup_table_compute.cc"},
  {"set_value,kX86,kAny,kNCHW,fp32", "set_value_compute.cc"},
  {"set_value,kX86,kAny,kNCHW,int32", "set_value_compute.cc"},
  {"set_value,kX86,kAny,kNCHW,int64", "set_value_compute.cc"},
  {"set_value,kX86,kAny,kNCHW,bool", "set_value_compute.cc"},
  {"set_value,kX86,kAny,kNCHW,double", "set_value_compute.cc"},
  {"expand,kHost,kAny,kAny,def", "expand_compute.cc"},
  {"squeeze,kHost,kAny,kAny,def", "squeeze_compute.cc"},
  {"squeeze2,kHost,kAny,kAny,def", "squeeze_compute.cc"},
  {"box_coder,kX86,kFloat,kNCHW,def", "box_coder_compute.cc"},
  {"conv2d_transpose,kX86,kFloat,kNCHW,def", "conv_transpose_compute.cc"},
  {"batch_norm,kX86,kFloat,kNCHW,def", "batch_norm_compute.cc"},
  {"sync_batch_norm,kX86,kFloat,kNCHW,def", "batch_norm_compute.cc"},
  {"unbind,kHost,kFloat,kNCHW,def", "unbind_compute.cc"},
  {"unbind,kHost,kFloat,kNCHW,def_int64", "unbind_compute.cc"},
  {"calib,kX86,kInt8,kNCHW,fp32_to_int8", "calib_compute.cc"},
  {"calib,kX86,kInt8,kNCHW,int8_to_fp32", "calib_compute.cc"},
  {"calib,kX86,kFloat,kNCHW,int32_to_fp32", "calib_compute.cc"},
  {"calib,kX86,kFloat,kNCHW,fp32_to_int32", "calib_compute.cc"},
  {"calib,kX86,kFloat,kNCHW,int32_to_int64", "calib_compute.cc"},
  {"calib,kX86,kFloat,kNCHW,int64_to_int32", "calib_compute.cc"},
  {"calib,kX86,kFloat,kNCHW,int64_to_fp32", "calib_compute.cc"},
  {"calib_once,kX86,kInt8,kNCHW,fp32_to_int8", "calib_compute.cc"},
  {"calib_once,kX86,kInt8,kNCHW,int8_to_fp32", "calib_compute.cc"},
  {"calib_once,kX86,kFloat,kNCHW,int32_to_fp32", "calib_compute.cc"},
  {"calib_once,kX86,kFloat,kNCHW,fp32_to_int32", "calib_compute.cc"},
  {"calib_once,kX86,kFloat,kNCHW,int32_to_int64", "calib_compute.cc"},
  {"calib_once,kX86,kFloat,kNCHW,int64_to_int32", "calib_compute.cc"},
  {"calib_once,kX86,kFloat,kNCHW,int64_to_fp32", "calib_compute.cc"},
  {"reshape,kHost,kAny,kAny,def", "reshape_compute.cc"},
  {"reshape2,kHost,kAny,kAny,def", "reshape_compute.cc"},
  {"flatten,kHost,kAny,kAny,def", "reshape_compute.cc"},
  {"flatten2,kHost,kAny,kAny,def", "reshape_compute.cc"},
  {"scale,kX86,kFloat,kNCHW,def", "scale_compute.cc"},
  {"scale,kX86,kFloat,kNCHW,int32", "scale_compute.cc"},
  {"scale,kX86,kFloat,kNCHW,int64", "scale_compute.cc"},
  {"search_grnn,kX86,kFloat,kNCHW,def", "search_grnn_compute.cc"},
  {"bilinear_interp,kX86,kFloat,kNCHW,def", "interpolate_compute.cc"},
  {"nearest_interp,kX86,kFloat,kNCHW,def", "interpolate_compute.cc"},
  {"bilinear_interp_v2,kX86,kFloat,kNCHW,def", "interpolate_compute.cc"},
  {"nearest_interp_v2,kX86,kFloat,kNCHW,def", "interpolate_compute.cc"},
  {"sequence_topk_avg_pooling,kX86,kFloat,kNCHW,def", "sequence_topk_avg_pooling_compute.cc"},
  {"matmul,kX86,kFloat,kNCHW,def", "matmul_compute.cc"},
  {"sequence_arithmetic,kX86,kFloat,kNCHW,def", "sequence_arithmetic_compute.cc"},
  {"search_seq_arithmetic,kX86,kFloat,kNCHW,def", "sequence_arithmetic_compute.cc"},
  {"assign_value,kHost,kAny,kNCHW,def", "assign_value_compute.cc"},
  {"search_attention_padding_mask,kX86,kFloat,kNCHW,def", "attention_padding_mask_compute.cc"},
  {"gru,kX86,kFloat,kNCHW,def", "gru_compute.cc"},
  {"reduce_mean,kX86,kFloat,kNCHW,def", "reduce_compute.cc"},
  {"reduce_sum,kX86,kFloat,kNCHW,def", "reduce_compute.cc"},
  {"reduce_sum,kX86,kFloat,kNCHW,int32", "reduce_compute.cc"},
  {"reduce_sum,kX86,kFloat,kNCHW,int64", "reduce_compute.cc"},
  {"reduce_prod,kX86,kFloat,kNCHW,def", "reduce_compute.cc"},
  {"reduce_prod,kX86,kFloat,kNCHW,int32", "reduce_compute.cc"},
  {"reduce_prod,kX86,kFloat,kNCHW,int64", "reduce_compute.cc"},
  {"reduce_max,kX86,kFloat,kNCHW,def", "reduce_compute.cc"},
  {"reduce_max,kX86,kFloat,kNCHW,int32", "reduce_compute.cc"},
  {"reduce_max,kX86,kFloat,kNCHW,int64", "reduce_compute.cc"},
  {"reduce_min,kX86,kFloat,kNCHW,def", "reduce_compute.cc"},
  {"reduce_min,kX86,kFloat,kNCHW,int32", "reduce_compute.cc"},
  {"reduce_min,kX86,kFloat,kNCHW,int64", "reduce_compute.cc"},
  {"instance_norm,kX86,kFloat,kNCHW,def", "instance_norm_compute.cc"},
  {"search_fc,kX86,kFloat,kNCHW,def", "search_fc_compute.cc"},
  {"dropout,kX86,kFloat,kNCHW,def", "dropout_compute.cc"},
  {"density_prior_box,kX86,kFloat,kNCHW,def", "density_prior_box_compute.cc"},
  {"match_matrix_tensor,kX86,kFloat,kNCHW,def", "match_matrix_tensor_compute.cc"},
  {"arg_max,kHost,kAny,kNCHW,fp32", "argmax_compute.cc"},
  {"arg_max,kHost,kAny,kNCHW,int64", "argmax_compute.cc"},
  {"arg_max,kHost,kAny,kNCHW,int32", "argmax_compute.cc"},
  {"arg_max,kHost,kAny,kNCHW,int16", "argmax_compute.cc"},
  {"arg_max,kHost,kAny,kNCHW,uint8", "argmax_compute.cc"},
  {"expand_as,kHost,kFloat,kAny,def", "expand_as_compute.cc"},
  {"expand_as,kHost,kFloat,kAny,int64", "expand_as_compute.cc"},
  {"stack,kHost,kFloat,kAny,def", "stack_compute.cc"},
  {"stack,kHost,kFloat,kAny,int32_def", "stack_compute.cc"},
  {"stack,kHost,kFloat,kAny,int64_def", "stack_compute.cc"},
  {"write_back,kHost,kAny,kAny,write_back", "write_back_compute.cc"},
  {"layer_norm,kX86,kFloat,kNCHW,def", "layer_norm_compute.cc"},
  {"sequence_reshape,kX86,kInt64,kNCHW,def", "sequence_reshape_compute.cc"},
  {"sequence_reshape,kX86,kFloat,kNCHW,def", "sequence_reshape_compute.cc"},
  {"conv2d,kX86,kFloat,kNCHW,def", "conv_compute.cc"},
  {"depthwise_conv2d,kX86,kFloat,kNCHW,def", "conv_compute.cc"},
  {"conv2d,kX86,kInt8,kNCHW,int8_out", "conv_compute.cc"},
  {"conv2d,kX86,kInt8,kNCHW,fp32_out", "conv_compute.cc"},
  {"depthwise_conv2d,kX86,kInt8,kNCHW,int8_out", "conv_compute.cc"},
  {"depthwise_conv2d,kX86,kInt8,kNCHW,fp32_out", "conv_compute.cc"},
  {"yolo_box,kARM,kFP16,kNCHW,def", "yolo_box_compute.cc"},
  {"yolo_box,kHost,kFloat,kNCHW,def", "yolo_box_compute.cc"},
  {"multiclass_nms,kHost,kFloat,kNCHW,def", "multiclass_nms_compute.cc"},
  {"multiclass_nms2,kHost,kFloat,kNCHW,def", "multiclass_nms_compute.cc"},
  {"multiclass_nms3,kHost,kFloat,kNCHW,def", "multiclass_nms_compute.cc"},
  {"  ", "  "}
};